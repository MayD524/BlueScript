func splitIndex(input_string, split_index) -> str
{
    let str new_str
    let int index = 0 // string index
    let int size = 0
    sizeof input_string -> size

    if size < split_index
        print "Split index is greater then string size"
        exit 
    endif

    lable main_loop
        set new_str = new_str + input_string[index]
        set index = index + 1
    goif split_index > index -> main_loop

    return new_str
}

func removeEmpty(input_array) -> array
{
    array newArray = []
    let int size = 0
    let int index = 0
    sizeof input_array -> size

    lable remove_goto
        let int temp_size = 0
        sizeof input_array[index] -> temp_size

        if temp_size > 2
            append input_array[index] -> newArray
        endif

        set index = index + 1
    goif index < size -> remove_goto

    return newArray
}

func splitChar(input_string, splitChar) -> array
{
    array newArray = []
    let int size = 0
    let int index = 0
    sizeof input_string -> size
    
    let str temp_string = ""
    
    lable split_goto
        if input_string[index] != splitChar
            set temp_string = temp_string + input_string[index]
        endif

        if input_string[index] == splitChar
            if new_str != " "
                append temp_string -> newArray
                set temp_string = ""
            endif 
        endif
        set index = index + 1
    goif index < size -> split_goto

    return newArray
}

func replace(input_string, lookfor_char, replace_char) -> str
{
    let str new_str = ""
    
    let int i = 0
    let int string_size = 0
    sizeof input_string -> string_size

    lable replace_goto
    
        if input_string[i] == lookfor_char
            set new_str = new_str + replace_char
        endif

        if input_string[i] != lookfor_char
            set new_str = new_str + input_string[i]
        endif

        set i = i + 1
    goif i < string_size -> replace_goto

    return new_str
}